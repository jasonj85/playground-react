[{"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\index.js":"1","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\App.js":"2","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\reportWebVitals.js":"3","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\axios.js":"4","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\Dashboard\\Dashboard.js":"5","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Login.js":"6","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\auth.service.js":"7","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Register.js":"8","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Profile.js":"9","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\application.service.js":"10","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\UserInfo.js":"11","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Navigation\\Navigation.js":"12","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\QuizForm.js":"13","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\quiz.service.js":"14","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\Quiz.js":"15","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\Result.js":"16","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\Dashboard\\DataTable.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":1510,"mtime":1607616287693,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":132,"mtime":1607512127015,"results":"22","hashOfConfig":"19"},{"size":806,"mtime":1607624344522,"results":"23","hashOfConfig":"19"},{"size":3125,"mtime":1607619249457,"results":"24","hashOfConfig":"19"},{"size":769,"mtime":1607555148289,"results":"25","hashOfConfig":"19"},{"size":3848,"mtime":1607619269735,"results":"26","hashOfConfig":"19"},{"size":1951,"mtime":1607617872102,"results":"27","hashOfConfig":"19"},{"size":376,"mtime":1607555142873,"results":"28","hashOfConfig":"19"},{"size":2224,"mtime":1607616075704,"results":"29","hashOfConfig":"19"},{"size":3004,"mtime":1607617953820,"results":"30","hashOfConfig":"19"},{"size":2287,"mtime":1607621576249,"results":"31","hashOfConfig":"19"},{"size":169,"mtime":1607624528388,"results":"32","hashOfConfig":"19"},{"size":2466,"mtime":1607624584995,"results":"33","hashOfConfig":"19"},{"size":645,"mtime":1607620051641,"results":"34","hashOfConfig":"19"},{"size":701,"mtime":1607624442062,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1uwlx7k",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\index.js",[],["80","81"],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\App.js",["82"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\n\nimport Dashboard from './components/Admin/Dashboard/Dashboard';\nimport Login from './components/Admin/User/Login';\nimport Profile from './components/Admin/User/Profile';\nimport Register from './components/Admin/User/Register';\nimport Quiz from './components/Quiz/Quiz';\nimport Navigation from './components/Navigation/Navigation';\n\nimport AuthService from './services/auth.service';\n\nimport './Styles.scss';\n\nconst App = (props) => {\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n      console.log(user);\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <header>\n          <Navigation currentUser={currentUser} />\n        </header>\n        <section>\n          <div className=\"container\">\n          <Switch>\n            {currentUser ? <Route path=\"/dashboard\" exact component={Dashboard} /> : null}\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/register\" exact component={Register} />\n            <Route path=\"/profile\" exact component={Profile} />\n            <Route path=\"/\" exact component={Quiz} />\n            <Route render={() => <p>Unauthorised!</p>} />\n          </Switch>\n          </div>\n        </section>\n\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\reportWebVitals.js",[],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\axios.js",[],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\Dashboard\\Dashboard.js",["83","84"],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Login.js",["85"],"import React, { useState, useRef } from \"react\";\r\n\r\nimport AuthService from \"../../../services/auth.service\";\r\n\r\nconst Login = (props) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [notification, setNotification] = useState(\"\");\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault();\r\n\r\n        setNotification(\"\");\r\n        setLoading(true);\r\n\r\n        AuthService.login(username, password).then(\r\n            () => {\r\n                props.history.push(\"/profile\");\r\n                window.location.reload();\r\n            },\r\n            (error) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                setLoading(false);\r\n                setNotification(resMessage);\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div class=\"alert alert-warning mb-2 text-center\">\r\n                <p>Please login with your details</p>\r\n            </div>\r\n            <div className=\"card card-container\">\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={e => setUsername(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-dark btn-block\" disabled={loading}>\r\n                            <span>Login &nbsp;</span>\r\n                            {loading && (\r\n                                <span className=\"spinner-border spinner-border-sm\"></span>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {notification && (\r\n                        <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {notification}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\auth.service.js",["86"],"import axios from \"../axios\";\r\n\r\nconst register = (username, email, password) => {\r\n    return axios.post(\"register\", {\r\n        username,\r\n        email,\r\n        password,\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n    return axios\r\n        .post(\"login\", {\r\n            username,\r\n            password,\r\n        })\r\n        .then((res) => {\r\n            if (res.data) {\r\n                localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n            }\r\n\r\n            return res.data;\r\n        });\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\n\r\nexport default {\r\n    register,\r\n    login,\r\n    getCurrentUser,\r\n    logout\r\n};","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Register.js",["87"],"import React, { useState, useRef } from \"react\";\r\n\r\nimport AuthService from \"../../../services/auth.service\";\r\n\r\nconst Register = (props) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [notification, setNotification] = useState(\"\");\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n\r\n        setNotification(\"\");\r\n        setSuccessful(false);\r\n\r\n        AuthService.register(username, email, password).then(\r\n            (response) => {\r\n                setNotification(response.data.message);\r\n                setSuccessful(true);\r\n                props.history.push(\"/login\");\r\n            },\r\n            (error) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                setNotification(resMessage);\r\n                setSuccessful(false);\r\n            }\r\n        );\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div class=\"alert alert-warning mb-2 text-center\">\r\n                <p>If you want to check the status of your previous entries please register with your email address</p>\r\n            </div>\r\n            <div className=\"card card-container\">\r\n                <form onSubmit={handleRegister}>\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                value={username}\r\n                                onChange={e => setUsername(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-dark btn-block\">Register</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {notification && (\r\n                        <div className=\"form-group\">\r\n                            <div\r\n                                className={successful ? \"alert alert-success\" : \"alert alert-danger\"}\r\n                                role=\"alert\"\r\n                            >\r\n                                {notification}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Profile.js",[],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\application.service.js",["88"],"import axios from \"../axios\";\r\n\r\nconst postApplication = (formData) => {\r\n  return axios.post('applications', formData)\r\n};\r\n\r\nconst getApplications = () => {\r\n  return axios.get('applications')\r\n};\r\n\r\nconst getUserApplications = (email) => {\r\n  return axios.post(\"applicant\", {email})\r\n};\r\n\r\nexport default {\r\n  postApplication,\r\n  getApplications,\r\n  getUserApplications\r\n};","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\UserInfo.js",["89"],"import React, { useState } from 'react';\r\nimport axios from '../../axios';\r\nimport AppService from '../../services/application.service';\r\n\r\nimport '../../Styles.scss';\r\n\r\nconst EntryForm = (props) => {\r\n    const [formData, setFormData] = useState({})\r\n\r\n    const updateInput = e => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    const handleApplication = e => {\r\n        e.preventDefault();\r\n\r\n        AppService.postApplication(formData).then(\r\n            (response) => {\r\n                props.setNotification(response.data.message);\r\n                props.setSuccessful(true);\r\n            },\r\n            (error) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                props.setNotification(resMessage);\r\n                props.setSuccessful(false);\r\n            }\r\n        );\r\n\r\n        setFormData({\r\n            name: '',\r\n            email: '',\r\n            answer: '',\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-info\">\r\n            <form onSubmit={handleApplication}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    onChange={updateInput}\r\n                    value={formData.name || ''}\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={updateInput}\r\n                    value={formData.email || ''}\r\n                />\r\n                <textarea\r\n                    type=\"text\"\r\n                    name=\"answer\"\r\n                    placeholder=\"Tell us why you want to win the PS5\"\r\n                    onChange={updateInput}\r\n                    value={formData.answer || ''}\r\n                ></textarea>\r\n                <button type=\"submit\">Send Application</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntryForm;","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Navigation\\Navigation.js",["90","91","92","93","94","95"],"import React, { useState } from 'react';\r\nimport axios from '../../axios';\r\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\r\n\r\nimport AuthService from '../../services/auth.service';\r\n\r\nconst Navigation = (props) => {\r\n    const logOut = () => {\r\n        AuthService.logout();\r\n    };\r\n\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-dark navbar-expand-md bg-dark justify-content-md-center justify-content-start\">\r\n            <a className=\"navbar-brand d-md-none d-inline\" href=\"\">Brand</a>\r\n            <button className=\"navbar-toggler ml-1\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsingNavbar2\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <a className=\"nav-link\" href=\"#_\"><i className=\"fa fa-search mr-1\"></i></a>\r\n            <div className=\"navbar-collapse collapse justify-content-between align-items-center w-100\" id=\"collapsingNavbar2\">\r\n                {props.currentUser ? (\r\n                    <>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink to=\"/\" className=\"nav-link\">Entry Form</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink to=\"/profile\" className=\"nav-link\">Profile</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink to=\"/dashboard\" className=\"nav-link\">Dashboard</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"nav navbar-nav flex-row justify-content-md-center justify-content-start flex-nowrap\">\r\n                            <li className=\"nav-item pull-right\">\r\n                                <a href=\"/profile\" className=\"nav-link\">Logged in as: {props.currentUser.username}</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a href=\"/\" className=\"nav-link\" onClick={logOut}>(Log out)</a>\r\n                            </li>\r\n                        </ul>\r\n                    </>\r\n                ) : (\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink to=\"/\" className=\"nav-link\">Entry Form</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink to=\"/register\" className=\"nav-link\">Register</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink to=\"/login\" className=\"nav-link\">Login</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    )}\r\n\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navigation;","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\QuizForm.js",["96"],"import React, { useState } from 'react';\r\nimport axios from '../../axios';\r\nimport '../../Styles.scss';\r\n\r\nconst QuizForm = (props) => {\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const updateInput = e => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.currentTarget.value,\r\n        })\r\n    }\r\n    \r\n    const handleCheckAnswers = e => {\r\n        e.preventDefault();\r\n\r\n        let score = 0;\r\n        // compare user answers to correct answers and calculate score\r\n        // will refactor to dynamic check\r\n        console.log(props.questions) \r\n        if (formData.q1 === props.questions[0].correct_answer) score +=20;\r\n        if (formData.q2 === props.questions[1].correct_answer) score +=20;\r\n        if (formData.q3 === props.questions[2].correct_answer) score +=20;\r\n        if (formData.q4 === props.questions[3].correct_answer) score +=20;\r\n        if (formData.q5 === props.questions[4].correct_answer) score +=20;\r\n\r\n        props.updateScore(score);\r\n           \r\n    }\r\n    return (\r\n        props.questions ?\r\n            (\r\n                <form onSubmit={handleCheckAnswers}>\r\n\r\n                    {props.questions.map((question, index) => {\r\n                        return (\r\n                            <div>\r\n                                <p><strong>Question {index + 1} - {(question.question)}</strong></p>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <select className=\"form-control\" name={\"q\" + (index + 1).toString()} \r\n                                    onChange={updateInput}>\r\n                                        <option>Select answer here</option>\r\n                                        {question.incorrect_answers.concat(question.correct_answer).map((a, i) => {\r\n                                            return (<option value={a} key={i}>{a}</option>)\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <button type=\"submit\">Check your score</button>\r\n\r\n                </form>\r\n\r\n            ) :\r\n            null\r\n    )\r\n}\r\n\r\nexport default QuizForm;","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\quiz.service.js",["97"],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\Quiz.js",["98","99"],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\Result.js",["100","101"],"import React, { useState } from 'react';\r\nimport axios from '../../axios';\r\n\r\nconst Result = (props) => {\r\n    return (\r\n        <div>\r\n            <h3>Your result was {props.score}%</h3>\r\n            {props.passed ? \r\n            (<p><strong>Congratulations you have successfully passed the quiz, please fill in your contact details below so that we can contact you if you win the prize draw.</strong></p>) : \r\n            (<p><strong>Unfortunately you have not got enough correct answers to enter the prize draw. Please hit the restart quiz button above to try again.</strong></p>)}         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\Dashboard\\DataTable.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":40,"nodeType":"108","messageId":"109","endLine":2,"endColumn":47},{"ruleId":"106","severity":1,"message":"110","line":8,"column":12,"nodeType":"108","messageId":"109","endLine":8,"endColumn":17},{"ruleId":"106","severity":1,"message":"111","line":8,"column":19,"nodeType":"108","messageId":"109","endLine":8,"endColumn":27},{"ruleId":"106","severity":1,"message":"112","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":35,"column":1,"nodeType":"115","endLine":40,"endColumn":3},{"ruleId":"106","severity":1,"message":"112","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":15,"column":1,"nodeType":"115","endLine":19,"endColumn":3},{"ruleId":"106","severity":1,"message":"116","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},{"ruleId":"106","severity":1,"message":"117","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"116","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},{"ruleId":"106","severity":1,"message":"118","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":23},{"ruleId":"106","severity":1,"message":"119","line":3,"column":25,"nodeType":"108","messageId":"109","endLine":3,"endColumn":31},{"ruleId":"106","severity":1,"message":"120","line":3,"column":33,"nodeType":"108","messageId":"109","endLine":3,"endColumn":38},{"ruleId":"121","severity":1,"message":"122","line":15,"column":13,"nodeType":"123","endLine":15,"endColumn":68},{"ruleId":"106","severity":1,"message":"116","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},{"ruleId":"113","severity":1,"message":"114","line":7,"column":1,"nodeType":"115","endLine":9,"endColumn":3},{"ruleId":"106","severity":1,"message":"116","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},{"ruleId":"106","severity":1,"message":"124","line":15,"column":12,"nodeType":"108","messageId":"109","endLine":15,"endColumn":24},{"ruleId":"106","severity":1,"message":"117","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"116","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'useRef' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.","'useState' is defined but never used.","'BrowserRouter' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'notification' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]