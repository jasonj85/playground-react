[{"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\index.js":"1","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\App.js":"2","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\reportWebVitals.js":"3","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\axios.js":"4","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\Dashboard\\Dashboard.js":"5","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Login.js":"6","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\auth.service.js":"7","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Register.js":"8","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Profile.js":"9","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\application.service.js":"10","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\UserInfo.js":"11","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Navigation\\Navigation.js":"12","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\QuizForm.js":"13","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\quiz.service.js":"14","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\Quiz.js":"15","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\Result.js":"16","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\Dashboard\\DataTable.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":1531,"mtime":1607626277175,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":132,"mtime":1607512127015,"results":"22","hashOfConfig":"19"},{"size":835,"mtime":1607677358006,"results":"23","hashOfConfig":"19"},{"size":3117,"mtime":1607678247952,"results":"24","hashOfConfig":"19"},{"size":767,"mtime":1607626363200,"results":"25","hashOfConfig":"19"},{"size":3848,"mtime":1607619269735,"results":"26","hashOfConfig":"19"},{"size":1951,"mtime":1607617872102,"results":"27","hashOfConfig":"19"},{"size":376,"mtime":1607555142873,"results":"28","hashOfConfig":"19"},{"size":2190,"mtime":1607626482424,"results":"29","hashOfConfig":"19"},{"size":2926,"mtime":1607678798479,"results":"30","hashOfConfig":"19"},{"size":2261,"mtime":1607626588821,"results":"31","hashOfConfig":"19"},{"size":169,"mtime":1607624528388,"results":"32","hashOfConfig":"19"},{"size":2686,"mtime":1607626428044,"results":"33","hashOfConfig":"19"},{"size":597,"mtime":1607626721685,"results":"34","hashOfConfig":"19"},{"size":701,"mtime":1607624442062,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1uwlx7k",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\index.js",[],["78","79"],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\App.js",[],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\reportWebVitals.js",[],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\axios.js",[],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\Dashboard\\Dashboard.js",["80"],"import React, { useState, useEffect } from 'react';\r\nimport axios from '../../../axios';\r\n\r\nimport DataTable from './DataTable';\r\n\r\nconst Dashboard = (props) => {\r\n    const [state, setState] = useState({ applications: [] });\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get('applications')\r\n        .then(res => {\r\n            setState({applications: res.data.rows});\r\n            console.log(res);\r\n        })\r\n        .catch(error => {\r\n            setError(true);\r\n            console.log(error);\r\n        })\r\n      }, []);\r\n\r\n    return (\r\n        <>\r\n            <h4>View all prize quiz entries:</h4>\r\n            <p>There are {state.applications.length} applications</p>\r\n            <DataTable rows={state.applications} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Login.js",["81"],"import React, { useState, useRef } from \"react\";\r\n\r\nimport AuthService from \"../../../services/auth.service\";\r\n\r\nconst Login = (props) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [notification, setNotification] = useState(\"\");\r\n\r\n    const handleLogin = e => {\r\n        e.preventDefault();\r\n\r\n        setNotification(\"\");\r\n        setLoading(true);\r\n\r\n        AuthService.login(username, password).then(\r\n            () => {\r\n                props.history.push(\"/profile\");\r\n                window.location.reload();\r\n            },\r\n            (error) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                setLoading(false);\r\n                setNotification(resMessage);\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div class=\"alert alert-warning mb-2 text-center\">\r\n                <p>Please login with your details</p>\r\n            </div>\r\n            <div className=\"card card-container\">\r\n                <form onSubmit={handleLogin}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={e => setUsername(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-dark btn-block\" disabled={loading}>\r\n                            <span>Login &nbsp;</span>\r\n                            {loading && (\r\n                                <span className=\"spinner-border spinner-border-sm\"></span>\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {notification && (\r\n                        <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {notification}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\auth.service.js",["82"],"import axios from \"../axios\";\r\n\r\nconst register = (username, email, password) => {\r\n    return axios.post(\"register\", {\r\n        username,\r\n        email,\r\n        password,\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n    return axios\r\n        .post(\"login\", {\r\n            username,\r\n            password,\r\n        })\r\n        .then((res) => {\r\n            if (res.data) {\r\n                localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n            }\r\n\r\n            return res.data;\r\n        });\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport default {\r\n    register,\r\n    login,\r\n    getCurrentUser,\r\n    logout\r\n};","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Register.js",["83"],"import React, { useState, useRef } from \"react\";\r\n\r\nimport AuthService from \"../../../services/auth.service\";\r\n\r\nconst Register = (props) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [notification, setNotification] = useState(\"\");\r\n\r\n    const handleRegister = e => {\r\n        e.preventDefault();\r\n\r\n        setNotification(\"\");\r\n        setSuccessful(false);\r\n\r\n        AuthService.register(username, email, password).then(\r\n            (response) => {\r\n                setNotification(response.data.message);\r\n                setSuccessful(true);\r\n                props.history.push(\"/login\");\r\n            },\r\n            (error) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                setNotification(resMessage);\r\n                setSuccessful(false);\r\n            }\r\n        );\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div class=\"alert alert-warning mb-2 text-center\">\r\n                <p>If you want to check the status of your previous entries please register with your email address</p>\r\n            </div>\r\n            <div className=\"card card-container\">\r\n                <form onSubmit={handleRegister}>\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                value={username}\r\n                                onChange={e => setUsername(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={e => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <button className=\"btn btn-dark btn-block\">Register</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {notification && (\r\n                        <div className=\"form-group\">\r\n                            <div\r\n                                className={successful ? \"alert alert-success\" : \"alert alert-danger\"}\r\n                                role=\"alert\"\r\n                            >\r\n                                {notification}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\User\\Profile.js",[],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\application.service.js",["84"],"import axios from \"../axios\";\r\n\r\nconst postApplication = (formData) => {\r\n  return axios.post('applications', formData)\r\n};\r\n\r\nconst getApplications = () => {\r\n  return axios.get('applications')\r\n};\r\n\r\nconst getUserApplications = (email) => {\r\n  return axios.post(\"applicant\", {email})\r\n};\r\n\r\nexport default {\r\n  postApplication,\r\n  getApplications,\r\n  getUserApplications\r\n};","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\UserInfo.js",[],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Navigation\\Navigation.js",["85"],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\QuizForm.js",[],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\services\\quiz.service.js",["86"],"import axios from \"../axios\";\r\n\r\nconst getQuestions = () => {\r\n  return axios.get('https://opentdb.com/api.php?amount=5');\r\n};\r\n\r\nexport default {\r\n    getQuestions,\r\n};","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\Quiz.js",["87"],"import React, { useState } from 'react';\r\n\r\nimport QuizForm from './QuizForm';\r\nimport Result from './Result';\r\nimport UserInfo from './UserInfo';\r\n\r\nimport logo from '../../images/win-a-playstation-5.jpg';\r\nimport '../../Styles.scss';\r\n\r\nimport QuizService from '../../services/quiz.service';\r\n\r\nconst Quiz = () => {\r\n    const [successful, setSuccessful] = useState(false);\r\n    const [notification, setNotification] = useState(\"\");\r\n    const [questions, setQuestions] = useState();\r\n    const [passed, setPassed] = useState(false);\r\n    const [failed, setFailed] = useState(false);\r\n    const [score, setScore] = useState();\r\n\r\n    const getNewQuestions = () => {\r\n        QuizService.getQuestions()\r\n            .then(response => {\r\n                setQuestions(response.data.results);\r\n                console.log(response);\r\n            }).catch(err => console.log(\"unable to get questions\"))\r\n\r\n        setScore();\r\n        setPassed(false);\r\n        setFailed(false);\r\n    };\r\n\r\n    const updateScore = result => {\r\n        setScore(result);\r\n\r\n        if (result >= 80) setPassed(true) \r\n        else (setFailed(true))\r\n\r\n        console.log(result);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"entry-form\">\r\n                <h5>Enter our quiz below for the chance to enter a PS5 prize draw!</h5>\r\n\r\n                <img src={logo} className=\"logo\" alt=\"logo\" />\r\n                {successful ? (\r\n                    <div class=\"alert alert-warning mb-2 text-center\">\r\n                        <p>Thank you your details have been registered and you will be contacted if you win!</p>\r\n                        <p>If you want to check the status of your application register with your email address.</p>\r\n                    </div>) :\r\n                    (\r\n                        <>\r\n                            <div className=\"form-group\">\r\n                                <button style={{ backgroundColor: questions ? \"#EDBC07\" : \"#157831\" }} onClick={getNewQuestions}>{questions ? \"Restart\" : \"Start\"} Quiz</button>\r\n                            </div>\r\n                            <QuizForm questions={questions} updateScore={updateScore} score={score} failed={failed} />\r\n                            <div className=\"jumbotron\">\r\n\r\n                                {passed || failed ? <Result score={score} passed={passed} /> : <div style={{ height: \"100px\" }}></div>}\r\n                                {passed ? <UserInfo setSuccessful={setSuccessful} setNotification={setNotification} /> : null}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Quiz;","C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Quiz\\Result.js",[],"C:\\WebDev\\playground-react\\prize-quiz-app\\src\\components\\Admin\\Dashboard\\DataTable.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":8,"column":12,"nodeType":"94","messageId":"95","endLine":8,"endColumn":17},{"ruleId":"92","severity":1,"message":"96","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":33},{"ruleId":"97","severity":1,"message":"98","line":34,"column":1,"nodeType":"99","endLine":39,"endColumn":3},{"ruleId":"92","severity":1,"message":"96","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":33},{"ruleId":"97","severity":1,"message":"98","line":15,"column":1,"nodeType":"99","endLine":19,"endColumn":3},{"ruleId":"100","severity":1,"message":"101","line":14,"column":13,"nodeType":"102","endLine":14,"endColumn":68},{"ruleId":"97","severity":1,"message":"98","line":7,"column":1,"nodeType":"99","endLine":9,"endColumn":3},{"ruleId":"92","severity":1,"message":"103","line":14,"column":12,"nodeType":"94","messageId":"95","endLine":14,"endColumn":24},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'notification' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]